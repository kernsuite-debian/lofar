---
# tasks file for buildhostcentos7
# 2017-05-23 Ruud Beukema
# 2017-06-22 Joern Kuensemoeller
# 2017-07-18 Thomas JÃ¼rges


  - name: Install group lofarbuild
    group: name=lofarbuild

  - name: Install user lofarbuild
    user: name=lofarbuild    shell=/bin/bash group="lofarbuild" generate_ssh_key=yes

  - name: Install EPEL repo.
    yum:
      name: http://mirror.nl.leaseweb.net/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
      state: present

  - name: Import EPEL GPG key.
    rpm_key:
      key: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
      state: present

  - name: Install packages
    yum: pkg={{item}} state=installed
    with_items:
    - atop
    - autoconf
    - autogen
    - bison
    - bison
    - blas
    - blas-devel
    - boost
    - boost-devel
    - boost-python
    - cfitsio
    - cfitsio-devel
    - cmake
    - cmake-gui
    - docker
    - fabric
    - fftw
    - fftw-devel
    - flex
    - gcc-c++
    - gcc-gfortran
    - gettext
    - git
    - hdf5
    - hdf5-devel
    - hdparm
    - lapack
    - lapack-devel
    - libpqxx-devel
    - libxml++-devel
    - log4cplus-devel
    - make
    - mariadb
    - mariadb-server
    - mod_wsgi
    - nano
    - ncurses
    - ncurses-devel
    - ntp
    - numpy
    - boost-python
    - openblas-devel
    - postfix
    - python2-mock
    - python-devel 
    - python-ldap 
    - python-lxml
    - python-pip
    - python-qpid 
    - python-psycopg2
    - qpid-cpp-server 
    - qpid-cpp-server-linearstore 
    - qpid-cpp-client 
    - qpid-tools 
    - qpid-cpp-client-devel
    - readline
    - readline-devel
    - supervisor
    - wcslib
    - wcslib-devel
    - wget
    - xterm
    - ypbind
    - yp-tools
    - zabbix22-agent
    tags: packages

  - name: Stop SELINUX
    selinux: state=disabled

  - name: Install PyPi packages
    pip: name={{item}}
    with_items:
    - django
    - djangorestframework
    - djangorestframework-xml
    - testing.mysqld
    - xmljson
    - mysql-connector==2.1.4
    - django-auth-ldap 
    tags: packages

  - name: get UnitTest++
    get_url: url=https://github.com/unittest-cpp/unittest-cpp/archive/v1.6.1.tar.gz dest=/opt
    tags:
    - unittest++

  # Install Postgres

  - name: Create /opt/Postgresl 
    file: path=/opt/Postgresql owner=lofarbuild group=lofarbuild state=directory mode=0775

  - name: download Postgres 9.6 repository rpm 
    get_url: url=https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm dest=/opt/Postgresql/pgdg-centos96-9.6-3.noarch.rpm mode=644

  - name: add Postgres repository 
    yum: name=/opt/Postgresql/pgdg-centos96-9.6-3.noarch.rpm state=present

  - name: install Postgres 9.6 
    yum: name='@postgresqldbserver96' state=present 

  - name: Postgres initdb 
    shell: /usr/pgsql-9.6/bin/initdb -D /var/lib/pgsql/9.6/data/
    become: yes
    become_user: postgres
    become_method: su

  - name: Changing config for OTDB
    shell: echo {{item}} >> /var/lib/pgsql/9.6/data/postgresql.conf 
    with_items:
      - "backslash_quote = on"
      - "standard_conforming_strings = off" 


  - name: Starting postgres
    shell: "(/usr/pgsql-9.6/bin/Postgres >/dev/null 2>&1 &)"
    async: 300
    poll: 0
    become: yes
    become_user: postgres
    become_method: su

  # todo: times out, need to listen on the dockeri, not the host
  - wait_for:
      port: 5432 
      delay: 5
      timeout: 10
    ignore_errors: yes

  # RA

  - name: add Postgres user for RA
    shell: /usr/pgsql-9.6/bin/pg_ctl -D /var/lib/pgsql/9.6/data/ start
    become: yes
    become_user: postgres
    become_method: su

  - name: create Postgres role for RA
    shell: /usr/pgsql-9.6/bin/psql -c "CREATE USER resourceassignment WITH SUPERUSER" 
    become: yes
    become_user: postgres
    become_method: su

  - name: populate Postgres DB for RA
    shell: |
           cd /opt/LOFAR/SAS/ResourceAssignment/ResourceAssignmentDatabase/radb/sql/;
           /usr/pgsql-9.6/bin/psql -f create_and_populate_database.sql
    become: yes
    become_user: postgres
    become_method: su

  # OTDB

  - name: populate otdb db
    shell: |
           cd /opt/LOFAR/SAS/OTDB/sql;
           psql -U postgres -f create_OTDB.sql -v ON_ERROR_STOP=1
    become: yes
    become_user: postgres
    become_method: su
    #ignore_errors: yes 


   # Setup Mysql

  - name: Change shell for user mysql
    shell: chsh -s /bin/bash mysql 

  - name: init Mysql db 
    shell: |
           mysql_install_db 
    become: yes
    become_user: mysql
    become_method: su

  - name: Starting Mysql
    shell: /usr/bin/mysqld_safe --datadir='/var/lib/mysql' & 
    async: 300
    poll: 0
    become: yes
    become_user: mysql 
    become_method: su

  # todo: times out, need to listen on the docker, not the host 
  - wait_for:
      port: 3306 
      delay: 5 
      timeout: 10 
    ignore_errors: yes

  # MoM

  - name: populate mom db
    shell: |
           mysql -u root < /momdb_init.sql 
    become: yes
    become_user: mysql 
    become_method: su


  # MoM - OTDB adapter (why is that supposed to run as tomcat ???)

  - name: create user tomcat 
    shell: adduser tomcat && chsh -s /bin/bash tomcat 

  - name: create /opt/tomcat
    file: path=/opt/tomcat/ owner=tomcat group=tomcat state=directory mode=0775

  - name: get mom otdb adapter
    get_url: url=https://support.astron.nl/nexus/content/groups/public/nl/astron/mom3/MoM-OTDB-adapter/2.7.0/MoM-OTDB-adapter-2.7.0.tar.gz dest=/opt/tomcat/MoM-OTDB-adapter-2.7.0.tar.gz mode=644

  - name: deploy mom otdb adapter
    shell: |
           cd /opt/tomcat/;
           tar -xzvf MoM-OTDB-adapter-2.7.0.tar.gz; 
           chown -R tomcat /opt/tomcat 

# Postfix

  - name: fix postfix config
    shell: sed -i -e 's/inet_protocols = all/inet_protocols = ipv4/g' /etc/postfix/main.cf 

# Build relevant LOFAR packages:
  - name: /opt/LOFAR should exist 
    shell: ls -lta /opt/LOFAR

  - name: create /opt/LOFAR/build
    file: path=/opt/LOFAR/build/ owner=lofarbuild group=lofarbuild state=directory mode=0775

  - name: create /opt/LOFAR/build/gnucxx11_opt
    file: path=/opt/LOFAR/build/gnucxx11_opt owner=lofarbuild group=lofarbuild state=directory mode=0775
 

  - name: Build trigger-related LOFAR packages
    shell: cd /opt/LOFAR/build/gnucxx11_opt;
           cmake
             -DBUILD_PACKAGES={{item}}
             ../..;
           make -j8;
           make install;
    with_items:
      - MoMQueryService
      - OTDBtoRATaskStatusPropagator
      - RATaskSpecifiedService
      - RAtoOTDBTaskSpecificationPropagator
      - ResourceAssigner
      - ResourceAssignmentDatabase
      - ResourceAssignmentEditor
      - ResourceAssignmentEstimator
      - ResourceAssignmentService
      - SpecificationServices
      - SystemStatusDatabase
      - SystemStatusService
      - TriggerServices
      - TriggerEmailService
      - TaskPrescheduler
      - DataManagement
      - RAScripts
      - StaticMetaData
      - OTDB_Services
      - SAS_OTDB


# rest interface

  - name: configure ldap in restinterface
    shell: |
           sed -i -e 's/AUTH_LDAP_USER_DN_TEMPLATE="uid=%(user)s,ou=Users,o=lofar,c=eu?cn"/AUTH_LDAP_USER_DN_TEMPLATE="cn=%(user)s,ou=Users,o=lofar,c=eu"/g' /opt/LOFAR/build/gnucxx11_opt/installed/lib64/python3.4/site-packages/lofar/triggerservices/restinterface/credentials.py
           sed -i -e 's/#AUTH_LDAP_CONNECTION_OPTIONS = { ldap.OPT_X_TLS_REQUIRE_CERT : ldap.OPT_X_TLS_NEVER }/AUTH_LDAP_GLOBAL_OPTIONS = { ldap.OPT_X_TLS_REQUIRE_CERT: ldap.OPT_X_TLS_NEVER } \nAUTH_LDAP_CONNECTION_OPTIONS = { ldap.OPT_X_TLS_REQUIRE_CERT : ldap.OPT_X_TLS_NEVER }/g' /opt/LOFAR/build/gnucxx11_opt/installed/lib64/python3.4/site-packages/lofar/triggerservices/restinterface/settings.py
           sed -i -e 's/'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.AllowAny',),/'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated',),/g' /opt/LOFAR/build/gnucxx11_opt/installed/lib64/python3.4/site-packages/lofar/triggerservices/restinterface/settings.py

  - name: configure secret key in rest interface 
    shell: |
           sed -i -e 's/SECRET_KEY = .*/SECRET_KEY = "{{ lookup('ini', 'secret_key section=restinterface file=/build.ini') }}"/g' /opt/LOFAR/build/gnucxx11_opt/installed/lib64/python3.4/site-packages/lofar/triggerservices/restinterface/credentials.py

  - name: migrate django database 
    shell: |
           . /opt/LOFAR/build/gnucxx11_opt/lofarinit.sh 
           python3 /opt/LOFAR/build/gnucxx11_opt/installed/lib64/python3.4/site-packages/lofar/triggerservices/manage.py migrate

  - name: Export static content for the rest interface.
    shell: |
           . /opt/LOFAR/build/gnucxx11_opt/lofarinit.sh 
           python3 /opt/LOFAR/build/gnucxx11_opt/installed/lib64/python3.4/site-packages/lofar/triggerservices/manage.py collectstatic

  - name: Copy the Apache configuration file for the rest interface.
    copy:
        src: /wsgi.conf
        dest: /etc/httpd/conf.d

  - name: Correct the group ownership and group permissions on a Django directory for apache access.
    file:
        path: /opt/LOFAR/build/gnucxx11_opt/installed/lib64/python3.4/site-packages/lofar/triggerservices
        group: apache
        mode: 0775

  - name: Correct the group ownership and group permissions on a Django SQLite DB for apache access.
    file:
        path: /opt/LOFAR/build/gnucxx11_opt/installed/lib64/python3.4/site-packages/lofar/triggerservices/db.sqlite3
        group: apache
        mode: 0664
