#!/usr/bin/env python3
#
# Copyright (C) 2016
# ASTRON (Netherlands Institute for Radio Astronomy)
# P.O.Box 2, 7990 AA Dwingeloo, The Netherlands
#
# This file is part of the LOFAR software suite.
# The LOFAR software suite is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The LOFAR software suite is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with the LOFAR software suite. If not, see <http://www.gnu.org/licenses/>.
#
# $Id: JobsToSchedule.py 33364 2016-01-21 21:21:12Z mol $

import logging
from lofar.mac.PipelineControl import PipelineControl
from lofar.messaging import DEFAULT_BROKER, DEFAULT_BUSNAME
from lofar.common.util import waitForInterrupt

logger = logging.getLogger(__name__)

if __name__ == "__main__":
    from optparse import OptionParser

    # Check the invocation arguments
    parser = OptionParser("%prog [options]")
    parser.add_option('-V', '--verbose', dest='verbose', action='store_true', help='verbose logging')
    parser.add_option('-b', '--broker', dest='broker', type='string', default=DEFAULT_BROKER,
                      help='Address of the broker, default: %default')
    parser.add_option("-e", "--exchange", dest="exchange", type="string", default=DEFAULT_BUSNAME,
                      help="Exchange on which the OTDB notifications are received")
    (options, args) = parser.parse_args()

    logging.basicConfig(format='%(asctime)s %(levelname)s %(message)s',
                        level=logging.DEBUG if options.verbose else logging.INFO)

    with PipelineControl(exchange=options.exchange, broker=options.broker) as pipelineControl:
        waitForInterrupt()

