#!/usr/bin/env python3

import logging
from lofar.lta.ingest.client.rpc import IngestRPC
from lofar.lta.ingest.common.config import DEFAULT_BROKER
from lofar.lta.ingest.server.config import DEFAULT_INGEST_BUSNAME, DEFAULT_INGEST_SERVICENAME
import sys
from optparse import OptionParser

logger = logging.getLogger(__name__)

def main():
    # Check the invocation arguments
    parser = OptionParser('%prog [options] <export_group_id>',
                          description='''remove all jobs (dataproducts) for the given export_group_id from the ingest queue\n
export_group_id is the mom_id of the export job''')
    parser.add_option('-q', '--broker', dest='broker', type='string', default=DEFAULT_BROKER, help='Address of the qpid broker, default: %default')
    parser.add_option('-b', '--busname', dest='busname', type='string', default=DEFAULT_INGEST_BUSNAME, help='Name of the bus exchange on the qpid broker, default: %s' % DEFAULT_INGEST_BUSNAME)
    parser.add_option('-s', '--servicename', dest='servicename', type='string', default=DEFAULT_INGEST_SERVICENAME, help='Name for this service, default: %s' % DEFAULT_INGEST_SERVICENAME)
    (options, args) = parser.parse_args()

    if len(args) == 0:
        parser.print_help()
        exit(1)

    logging.basicConfig(format='%(asctime)s %(levelname)s %(message)s',
                        level=logging.INFO)

    with IngestRPC(busname=options.busname, servicename=options.servicename, broker=options.broker) as rpc:
        export_group_id = int(args[0])
        if rpc.removeExportJob(export_group_id):
            print(rpc.getReport(export_group_id))
        else:
            logger.warn('Failed to remove export group id %s', export_group_id)


if __name__ == '__main__':
    main()
