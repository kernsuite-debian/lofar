V 13
1
LANG:1 0 
PANEL,-1 -1 388 166 N "_3DFace" 1
"$station"
"main()
{
  dyn_dyn_anytype tab;
  
  station = $station+\":\";  
  baseDP=station+\"LOFAR_PIC_POWEC0\";
  
  if (dpExists(station+\"LOFAR_PIC_StationInfo.nrOfPowerUnits\"))
  {
    dpGet(station+\"LOFAR_PIC_StationInfo.nrOfPowerUnits\",nrOfPowerUnits);
    reload();
  }
  else
  {
    setValue(\"powerUnit\", \"backCol\", \"Lofar_dpdoesnotexist\");
  }    
}
  
private void reload()
{
  
  // check if the required datapoint for this view are enabled and accessible
  if (navFunct_dpReachable(station+\"LOFAR_PIC_POWEC0\"))
  {
    dyn_string connectpoints;
    dynAppend(connectpoints,station+\"LOFAR_PIC_POWEC0.nrOfModules:_online.._invalid\");
    dynAppend(connectpoints,station+\"LOFAR_PIC_POWEC0.nrOfModules:_online.._value\");
    dynAppend(connectpoints,station+\"LOFAR_PIC_POWEC0.OK:_online.._value\");
    if (nrOfPowerUnits == 2)
    {
      dynAppend(connectpoints,station+\"LOFAR_PIC_POWEC1.nrOfModules:_online.._invalid\");
      dynAppend(connectpoints,station+\"LOFAR_PIC_POWEC1.nrOfModules:_online.._value\");
      dynAppend(connectpoints,station+\"LOFAR_PIC_POWEC1.OK:_online.._value\");
      dpConnect(\"update2Powecs\",connectpoints);
    }
    else
    {
      dpConnect(\"updatePowec\",connectpoints);
    }
  }
  else
  {
    if (dpExists(\"LOFAR_PIC_POWEC0\"))
    {
      setValue(\"powerUnit\", \"backCol\", \"Lofar_dpOffline\");
    }
    else
    {
      setValue(\"powerUnit\", \"backCol\", \"Lofar_dpdoesnotexist\");
    }
  }	
}

void updatePowec(string dp1, bool invalid,
                 string dp2, int nrOfModules,
                 string dp3, dyn_int OK)
{
  
  string tooltip= station + \" PowerUnit <br>\";
  string color = \"Lofar_operational\";
  bool ok = true;
  string db = dpSubStr(dp1,DPSUB_SYS);
  
  if (invalid)
  {
    color = \"Lofar_invalid\";
    tooltip += \"POWEC0: invalid, unit might be turned off?<br> Or wrong snmp protocol\";
    ok=false;
  } 
  else
  {            
    
    // Sometimes the boards doesn't give an answer anymore, in that case nrOfModules = 0, so thats an error,
    // For now only a powercycle is known to resolve this issue
    if (nrOfModules < 1) {  
      tooltip += \"POWEC0: nrOfModules = 0, unit might be stalled\";
      color = \"Lofar_suspicious\";
      ok = false;
    }
    else if (nrOfModules != dynlen(OK))
    {
      tooltip += \"POWEC0: nrOfModules and OKArray length differ\";
      color = \"Lofar_suspicious\";
    }
    else 
    {
      tooltip += \"POWEC0: <br>\";

      // PCS type controllers have 1=ok 2=error
      int module_ok=1;    
    
      // new ACX type controllers have 0=ok 1=error
      // DPT has to be extended with powerSystemType so we can be more flexible with the next check
      if (db == \"PL610:\" || db == \"PL611:\" || db == \"PL612:\" || db == \"IE613:\") module_ok = 0;
    
      for (int i = 1; i <= nrOfModules; i++)
      {
        if (OK[i] != module_ok)
        {
          ok = false;
          tooltip += \"        Module [\"+i+\"] not OK <br>\";
          color = \"Lofar_broken\";
        }     
      }
    }
  }  
  if (ok) 
  {
    tooltip += \"All Modules OK <br>\";
    color = \"Lofar_operational\";
    setValue(\"powerUnit\",\"toolTipText\",tooltip);
    setValue(\"powerUnit\", \"backCol\", color);
  }
  else
  {
    setValue(\"powerUnit\",\"toolTipText\",tooltip);
    setValue(\"powerUnit\", \"backCol\", color);
  }
}

void update2Powecs(string dp1, bool invalid1,
                   string dp2, int nrOfModules1,
                   string dp3, dyn_int OK1,
                   string dp4, bool invalid2,
                   string dp5, int nrOfModules2,
                   string dp6, dyn_int OK2)
{
  string tooltip= station + \" PowerUnit <br>\";
  string color = \"Lofar_operational\";
  bool ok = true;
  string db = dpSubStr(dp1,DPSUB_SYS);

  if (invalid1)
  {
    color = \"Lofar_invalid\";
    tooltip += \"POWEC0: invalid, unit might be turned off?<br> Or wrong snmp protocol\";
    ok=false;
  } 
  else if (invalid2)
  { 
    color = \"Lofar_invalid\";
    tooltip += \"POWEC1: invalid, unit might be turned off?<br> Or wrong snmp protocol\";
    ok=false;
  } 
  // Sometimes the boards doesn't give an answer anymore, in that case nrOfModules = 0, so thats an error,
  // For now only a powercycle is known to resolve this issue
  else if (nrOfModules1 < 1)
  {  
    tooltip += \"POWEC0: nrOfModules = 0, unit might be stalled\";
    color = \"Lofar_suspicious\";
    ok=false;
  }
  else if (nrOfModules2 < 1)
  {  
    tooltip += \"POWEC1: nrOfModules = 0, unit might be stalled\";
    color = \"Lofar_suspicious\";
    ok=false;
  }
  else if (nrOfModules1 != dynlen(OK1))
  {
    tooltip += \"POWEC0: nrOfModules and OKArray length differ\";
    color = \"Lofar_suspicious\";
    ok=false;
  }
  else if (nrOfModules2 != dynlen(OK2))
  {
    tooltip += \"POWEC1: nrOfModules and OKArray length differ\";
    color = \"Lofar_suspicious\";
    ok=false;
  }
  else 
  {
    tooltip += \"POWEC0: </br>\";
    // PCS type controllers have 1=ok 2=error
    int module_ok=1;    
    
    // new ACX type controllers have 0=ok 1=error
    // DPT has to be extended with powerSystemType so we can be more flexible with the next check
    if (db == \"PL610:\" || db == \"PL611:\" || db == \"PL612:\" || db == \"IE613:\") module_ok = 0;
        
    for (int i = 1; i <= nrOfModules1; i++)
    {
      if (OK1[i]  != module_ok)
      {
        ok = false;
        tooltip += \"        Module [\"+i+\"] not OK </br>\";
        color = \"Lofar_broken\";
      }     
    }
    
    tooltip += \"POWEC1: </br>\";
    
    for (int i = 1; i <= nrOfModules2; i++)
    {
      if (OK2[i] != module_ok)
      {
        ok = false;
        tooltip += \"        Module [\"+i+\"] not OK </br>\";
        color = \"Lofar_broken\";
      }     
    }
  }
  
  if (ok) 
  {
    tooltip += \"All Modules OK <br>\";
    color = \"Lofar_operational\";
    setValue(\"powerUnit\",\"toolTipText\",tooltip);
    setValue(\"powerUnit\", \"backCol\", color);
  } 
  else
  {
    setValue(\"powerUnit\",\"toolTipText\",tooltip);
    setValue(\"powerUnit\", \"backCol\", color);
  }
}

" 0
 E "main(int x, int y)
{
  click();
}" 0
 "main()
{
  rClick();
}" 0
 "main(int x, int y)
{
  dblClick();
}" 0
 1 -1 -1 0  0 0
""0  1
E "#uses \"navPanel.ctl\"
string station = \"\";
string baseDP=\"\";
int nrOfPowerUnits = 0;

bool    bDoubleClicked  = false;

// routine for single mouse click
void click() {
  // set delay in case double click was meant
  delay(0, 100); 
  if (!bDoubleClicked) {  
    navPanel_setEvent(station,\"EventClick\");
  }
}

// routine for double mouse click
void dblClick() {
  // indicate this is a doubleClick
  bDoubleClicked = true;   
  
    if (dpExists(baseDP) ) {
    LOG_DEBUG(\"powerUnit_small.pnl:DoubleClick|Setting currentDatapoint from : \"+g_currentDatapoint+\" to \"+baseDP);
    g_currentDatapoint=baseDP;
    navPanel_setEvent(station,\"ChangePanel\");
  }
  
  // set delay to avoid click event will be triggered
  delay(0, 500);
  bDoubleClicked = false;  
}

// routine for right mouse click
void rClick() {
}" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
6 0
"powerUnit"
""
1 230 150 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0

0 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"dashclr"N "_Transparent"
"antiAliased" "0"
E "main()
{
  click();
}" 0
 0 1 1 2 1 E 1 0 1 0 -10 1 E 0 10 14 19
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
